library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_arith.ALL;
use IEEE.STD_LOGIC_unsigned.ALL;
-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--use IEEE.NUMERIC_STD.ALL;
-- Uncomment the following library declaration if instantiating
-- any Xilinx primitives in this code.
--library UNISIM;
--use UNISIM.VComponents.all;
entity registers is
Port ( clk : in STD_LOGIC;
il : in STD_LOGIC;
ir : in STD_LOGIC;
rst : in STD_LOGIC;
mode : in STD_LOGIC_VECTOR (1 downto 0);
i : in STD_LOGIC_VECTOR (3 downto 0);
q : out STD_LOGIC_VECTOR (3 downto 0));
end registers;
architecture Behavioral of registers is
begin
PROCESS(clk,rst)
variable qtmp : std_logic_VECTOR(3 DOWNTO 0);
BEGIN
if rst = '1' then
qtmp :="0000";
elsIF (clk = '1' AND clk' EVENT) THEN
CASE mode IS
WHEN "00" => qtmp := qtmp;
WHEN "01" => qtmp := i;
WHEN "10" => qtmp:=qtmp(2 DOWNTO 0) & ir; --Left Shift
WHEN "11" => qtmp:=il & qtmp(3 DOWNTO 1); -- Right Shift
WHEN OTHERS => NULL;
END CASE;
END IF;
q <= qtmp;
End process;
end Behavioral;

--------------------
TEST BENCH
LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--USE ieee.numeric_std.ALL;
ENTITY registers_tb IS
END registers_tb;
ARCHITECTURE behavior OF registers_tb IS
-- Component Declaration for the Unit Under Test (UUT)
COMPONENT registers
PORT(
clk : IN std_logic;
il : IN std_logic;
ir : IN std_logic;
rst : IN std_logic;
mode : IN std_logic_vector(1 downto 0);
i : IN std_logic_vector(3 downto 0);
q : out std_logic_vector(3 downto 0)
);
END COMPONENT;
--Inputs
signal clk : std_logic := '0';
signal il : std_logic := '0';
signal ir : std_logic := '0';
signal rst : std_logic := '0';
signal mode : std_logic_vector(1 downto 0) := (others => '0');
signal i : std_logic_vector(3 downto 0) := (others => '0');
--outputs
signal q : std_logic_vector(3 downto 0) := (others => '0');
-- Clock period definitions
-- constant clk_period : time := 10 ns;
BEGIN
-- Instantiate the Unit Under Test (UUT)
uut: registers PORT MAP (
clk => clk,
il => il,
ir => ir,
rst => rst,
mode => mode,
i => i,
q => q
);
-- Clock process definitions
PROCESS(clk, rst)
BEGIN
Rst<= '0';
rst <='0' after 70ns;
clk<= not clk after 20ns;
END PROCESS;
process
begin
i<="1010"; wait for 100 ns;
mode<="00"; wait for 100 ns;
mode <="01"; wait for 100 ns;
mode <="10"; wait for 100 ns;
ir<='1'; wait for 100 ns;
mode <="11"; wait for 100 ns;
il<='1'; wait for 100 ns;
end process;
END;